#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç SofaScore
"""
import sys
sys.path.append('.')

import requests
from bs4 import BeautifulSoup
import re

def test_sofascore():
    print('üîç –ü–†–û–°–¢–û–ô –¢–ï–°–¢ SOFASCORE')
    print('='*50)
    
    headers = {
        'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36'
    }
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∏–¥—ã —Å–ø–æ—Ä—Ç–∞
    sports = {
        '—Ñ—É—Ç–±–æ–ª': 'https://www.sofascore.com/football/livescore',
        '—Ç–µ–Ω–Ω–∏—Å': 'https://www.sofascore.com/tennis/livescore',
        '–≥–∞–Ω–¥–±–æ–ª': 'https://www.sofascore.com/handball/livescore',
        '–Ω–∞—Å—Ç–æ–ª—å–Ω—ã–π —Ç–µ–Ω–Ω–∏—Å': 'https://www.sofascore.com/table-tennis/livescore'
    }
    
    total_matches = 0
    
    for sport_name, url in sports.items():
        try:
            print(f'\nüèà {sport_name.upper()}')
            print('-' * 30)
            
            response = requests.get(url, headers=headers, timeout=10)
            print(f'–°—Ç–∞—Ç—É—Å: {response.status_code}')
            
            if response.status_code == 200:
                html = response.text
                print(f'–†–∞–∑–º–µ—Ä HTML: {len(html):,} —Å–∏–º–≤–æ–ª–æ–≤')
                
                # –ü—Ä–æ—Å—Ç—ã–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã live –º–∞—Ç—á–µ–π
                live_count = html.lower().count('live')
                scores_count = len(re.findall(r'\d+[:-]\d+', html))
                
                print(f'Live —É–ø–æ–º–∏–Ω–∞–Ω–∏–π: {live_count}')
                print(f'–°—á–µ—Ç–æ–≤ –Ω–∞–π–¥–µ–Ω–æ: {scores_count}')
                
                # –ò—â–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
                stats_terms = ['possession', 'shots', 'xG', 'corners']
                stats_found = 0
                
                for term in stats_terms:
                    count = html.lower().count(term.lower())
                    if count > 0:
                        stats_found += count
                        print(f'{term}: {count}')
                
                print(f'–í—Å–µ–≥–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {stats_found}')
                
                # –û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –¥–∞–Ω–Ω—ã—Ö
                if live_count > 100 and scores_count > 50:
                    estimated_matches = min(live_count // 10, scores_count // 5)
                    total_matches += estimated_matches
                    print(f'‚úÖ –û—Ü–µ–Ω–∫–∞ –º–∞—Ç—á–µ–π: ~{estimated_matches}')
                    
                    if stats_found > 20:
                        print(f'‚úÖ –ë–æ–≥–∞—Ç–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞!')
                    else:
                        print(f'‚ö†Ô∏è –ú–∞–ª–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏')
                else:
                    print(f'‚ùå –ú–∞–ª–æ live –¥–∞–Ω–Ω—ã—Ö')
            
            else:
                print(f'‚ùå –û—à–∏–±–∫–∞: {response.status_code}')
                
        except Exception as e:
            print(f'‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}')
    
    print(f'\nüéØ –û–ë–©–ê–Ø –û–¶–ï–ù–ö–ê SOFASCORE:')
    print(f'‚Ä¢ –ü—Ä–∏–º–µ—Ä–Ω–æ {total_matches} live –º–∞—Ç—á–µ–π')
    print(f'‚Ä¢ –ë–æ–≥–∞—Ç–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (xG, –≤–ª–∞–¥–µ–Ω–∏–µ, —É–¥–∞—Ä—ã)')
    print(f'‚Ä¢ H2H –∏ —Ñ–æ—Ä–º–∞ –∫–æ–º–∞–Ω–¥')
    print(f'‚Ä¢ –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã')
    
    if total_matches > 50:
        print(f'\n‚úÖ SOFASCORE –õ–£–ß–®–ï scores24.live!')
        print(f'üéØ –†–µ–∫–æ–º–µ–Ω–¥—É—é –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ SofaScore!')
    elif total_matches > 30:
        print(f'\n‚úÖ SOFASCORE –ö–û–ù–ö–£–†–ï–ù–¢–û–°–ü–û–°–û–ë–ï–ù!')
    else:
        print(f'\n‚ö†Ô∏è scores24.live –ø–æ–∫–∞ –ª—É—á—à–µ')

if __name__ == '__main__':
    test_sofascore()