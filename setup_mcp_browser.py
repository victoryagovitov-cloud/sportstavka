"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ MCP Browser –æ–∫—Ä—É–∂–µ–Ω–∏—è
"""
import subprocess
import sys
import os
import logging

def install_requirements():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è MCP Browser"""
    print("üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è MCP Browser...")
    
    try:
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º MCP SDK
        subprocess.run([sys.executable, "-m", "pip", "install", "mcp"], check=True)
        print("‚úÖ MCP SDK —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        subprocess.run([sys.executable, "-m", "pip", "install", "-r", "requirements_mcp.txt"], check=True)
        print("‚úÖ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        
        return True
        
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: {e}")
        return False

def install_browser_use():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ browser-use MCP —Å–µ—Ä–≤–µ—Ä–∞"""
    print("üåê –£—Å—Ç–∞–Ω–æ–≤–∫–∞ browser-use MCP —Å–µ—Ä–≤–µ—Ä–∞...")
    
    try:
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º browser-use —á–µ—Ä–µ–∑ uvx
        subprocess.run(["uvx", "browser-use", "--help"], check=True)
        print("‚úÖ browser-use MCP —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω")
        return True
        
    except (subprocess.CalledProcessError, FileNotFoundError) as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ browser-use: {e}")
        print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å uvx: pip install uv")
        return False

def test_mcp_connection():
    """–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MCP —Å–µ—Ä–≤–µ—Ä—É"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MCP —Å–µ—Ä–≤–µ—Ä—É...")
    
    try:
        import asyncio
        from mcp_browser_client import test_mcp_browser
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
        asyncio.run(test_mcp_browser())
        print("‚úÖ MCP –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è MCP: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
    print("üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ MCP Browser –æ–∫—Ä—É–∂–µ–Ω–∏—è")
    print("=" * 50)
    
    # 1. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    if not install_requirements():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏")
        return False
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º browser-use
    if not install_browser_use():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å browser-use")
        return False
    
    # 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    if not test_mcp_connection():
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ MCP —Å–µ—Ä–≤–µ—Ä—É")
        return False
    
    print("=" * 50)
    print("üéâ MCP Browser –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
    print("üí° –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å MCPBetBoomScraper –≤ –∫–æ–¥–µ")
    
    return True

if __name__ == "__main__":
    main()