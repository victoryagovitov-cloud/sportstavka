#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫ –±–µ–∑ –±—Ä–∞—É–∑–µ—Ä–∞
"""
import sys
sys.path.append('.')

from utils.logger import setup_logger
from scrapers.demo_data_provider import demo_provider
from ai_analyzer.claude_analyzer import ClaudeAnalyzer
from telegram_bot.reporter import TelegramReporter

def demo_analysis_cycle():
    """
    –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ü–∏–∫–ª –∞–Ω–∞–ª–∏–∑–∞
    """
    logger = setup_logger('demo_analyzer')
    
    print('üéØ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–û–ù–ù–´–ô –¶–ò–ö–õ –ê–ù–ê–õ–ò–ó–ê')
    print('='*60)
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–µ
    print('üìä –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö...')
    all_matches = []
    all_matches.extend(demo_provider.get_demo_football_matches())
    all_matches.extend(demo_provider.get_demo_tennis_matches())
    all_matches.extend(demo_provider.get_demo_handball_matches())
    
    print(f'–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ {len(all_matches)} –¥–µ–º–æ-–º–∞—Ç—á–µ–π')
    
    # –ê–Ω–∞–ª–∏–∑ —Å Claude AI
    print('\\nü§ñ –ê–Ω–∞–ª–∏–∑ —Å Claude AI...')
    claude_analyzer = ClaudeAnalyzer(logger)
    analyzed_matches = claude_analyzer.analyze_multiple_matches(all_matches)
    
    print(f'–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ {len(analyzed_matches)} –º–∞—Ç—á–µ–π')
    
    # –í—ã–±–æ—Ä –ª—É—á—à–∏—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
    print('\\nüéØ –í—ã–±–æ—Ä –ª—É—á—à–∏—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π...')
    best_matches = claude_analyzer.get_best_recommendations(analyzed_matches, 5)
    
    print(f'–í—ã–±—Ä–∞–Ω–æ {len(best_matches)} –ª—É—á—à–∏—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π')
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è Claude
    print('\\nüìã –î–ê–ù–ù–´–ï, –ü–ï–†–ï–î–ê–ù–ù–´–ï –í CLAUDE AI:')
    print('-' * 50)
    
    for i, match in enumerate(best_matches, 1):
        sport = match.get('sport', 'unknown')
        
        if sport == 'football':
            print(f'\\n{i}. ‚öΩ –§–£–¢–ë–û–õ: {match["team1"]} - {match["team2"]}')
            print(f'   –°—á–µ—Ç: {match["score"]} ({match["time"]}) | {match["league"]}')
            
            if 'statistics' in match:
                stats = match['statistics']
                print(f'   xG: {stats.get("xG", {})}')
                print(f'   –í–ª–∞–¥–µ–Ω–∏–µ: {stats.get("–í–ª–∞–¥–µ–Ω–∏–µ –º—è—á–æ–º", {})}')
                print(f'   –£–¥–∞—Ä—ã –≤ —Å—Ç–≤–æ—Ä: {stats.get("–£–¥–∞—Ä—ã –≤ —Å—Ç–≤–æ—Ä", {})}')
            
            if 'prediction' in match:
                print(f'   –ü—Ä–æ–≥–Ω–æ–∑: {match["prediction"]}')
                
            if 'odds' in match:
                print(f'   –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã: {match["odds"]}')
                
            print(f'   ‚ú® –ê–Ω–∞–ª–∏–∑ Claude: {match.get("ai_analysis", "–ê–Ω–∞–ª–∏–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω")}')
        
        elif sport == 'tennis':
            print(f'\\n{i}. üéæ –¢–ï–ù–ù–ò–°: {match["player1"]} - {match["player2"]}')
            print(f'   –°—á–µ—Ç: {match["sets_score"]} ({match["current_set"]}) | {match["tournament"]}')
            
            if 'statistics' in match:
                stats = match['statistics']
                print(f'   –≠–π—Å—ã: {stats.get("–≠–π—Å—ã", {})}')
                print(f'   1-—è –ø–æ–¥–∞—á–∞: {stats.get("1-—è –ø–æ–¥–∞—á–∞", {})}')
            
            if 'rankings' in match:
                print(f'   –†–µ–π—Ç–∏–Ω–≥–∏: {match["rankings"]}')
                
            print(f'   ‚ú® –ê–Ω–∞–ª–∏–∑ Claude: {match.get("ai_analysis", "–ê–Ω–∞–ª–∏–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω")}')
        
        elif sport == 'handball':
            print(f'\\n{i}. ü§æ –ì–ê–ù–î–ë–û–õ: {match["team1"]} - {match["team2"]}')
            print(f'   –°—á–µ—Ç: {match["score"]} ({match["time"]}) | {match["league"]}')
            
            if 'totals_calculation' in match:
                totals = match['totals_calculation']
                print(f'   üìà –ü—Ä–æ–≥–Ω–æ–∑–Ω—ã–π —Ç–æ—Ç–∞–ª: {totals["predicted_total"]} –≥–æ–ª–æ–≤')
                print(f'   üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {totals["recommendation"]}')
                print(f'   üìä –¢–µ–º–ø: {totals["tempo"]} ({totals["reasoning"]})')
                
            print(f'   ‚ú® –ê–Ω–∞–ª–∏–∑ Claude: {match.get("ai_analysis", "–ê–Ω–∞–ª–∏–∑ –≤—ã–ø–æ–ª–Ω–µ–Ω")}')
    
    # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –¥–ª—è Telegram
    print('\\nüì± –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –¥–ª—è Telegram...')
    telegram_reporter = TelegramReporter(logger)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∫ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å –æ—Ç—á–µ—Ç
    report_text = telegram_reporter._build_report(best_matches)
    print('\\nüìã –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ –î–õ–Ø TELEGRAM:')
    print('-' * 50)
    print(report_text[:1000] + '...' if len(report_text) > 1000 else report_text)
    
    print('\\n‚úÖ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!')
    print('–°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ scores24.live')

if __name__ == '__main__':
    demo_analysis_cycle()