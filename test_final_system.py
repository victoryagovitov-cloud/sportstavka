#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã —Å –¥–µ–º–æ-–¥–∞–Ω–Ω—ã–º–∏
"""
import sys
sys.path.append('.')

from utils.logger import setup_logger
from scrapers.demo_data_provider import demo_provider
from ai_analyzer.claude_analyzer import ClaudeAnalyzer
from telegram_bot.reporter import TelegramReporter

def test_complete_system():
    print('üéØ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –ü–û–õ–ù–û–ô –°–ò–°–¢–ï–ú–´')
    print('='*70)
    
    logger = setup_logger('final_test')
    
    # 1. –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ (–¥–µ–º–æ, –∏–º–∏—Ç–∏—Ä—É—é—â–∏–µ scores24.live)
    print('üìä –®–∞–≥ 1: –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö (–¥–µ–º–æ-—Ä–µ–∂–∏–º)...')
    
    football_matches = demo_provider.get_demo_football_matches()
    tennis_matches = demo_provider.get_demo_tennis_matches()
    handball_matches = demo_provider.get_demo_handball_matches()
    
    all_matches = football_matches + tennis_matches + handball_matches
    print(f'–°–æ–±—Ä–∞–Ω–æ –º–∞—Ç—á–µ–π: {len(all_matches)}')
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–±—Ä–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    print('\\nüìã –°–û–ë–†–ê–ù–ù–´–ï –î–ê–ù–ù–´–ï –î–õ–Ø CLAUDE AI:')
    print('-' * 50)
    
    for i, match in enumerate(all_matches, 1):
        sport = match.get('sport', 'unknown')
        
        if sport == 'football':
            print(f'{i}. ‚öΩ {match["team1"]} - {match["team2"]}')
            print(f'   –°—á–µ—Ç: {match["score"]} ({match["time"]}) | {match["league"]}')
            
            stats = match.get('statistics', {})
            if 'xG' in stats:
                xg_data = stats['xG']
                print(f'   xG: {xg_data["team1"]} vs {xg_data["team2"]}')
            if '–í–ª–∞–¥–µ–Ω–∏–µ –º—è—á–æ–º' in stats:
                possession = stats['–í–ª–∞–¥–µ–Ω–∏–µ –º—è—á–æ–º'] 
                print(f'   –í–ª–∞–¥–µ–Ω–∏–µ: {possession["team1"]} vs {possession["team2"]}')
                
        elif sport == 'tennis':
            print(f'{i}. üéæ {match["player1"]} - {match["player2"]}')
            print(f'   –°—á–µ—Ç: {match["sets_score"]} ({match["current_set"]}) | {match["tournament"]}')
            
            if 'rankings' in match:
                rankings = match['rankings']
                print(f'   –†–µ–π—Ç–∏–Ω–≥–∏: {rankings.get("player1", "?")} vs {rankings.get("player2", "?")}')
                
        elif sport == 'handball':
            print(f'{i}. ü§æ {match["team1"]} - {match["team2"]}')
            print(f'   –°—á–µ—Ç: {match["score"]} ({match["time"]}) | {match["league"]}')
            
            if 'totals_calculation' in match:
                totals = match['totals_calculation']
                print(f'   üî¢ –¢–æ—Ç–∞–ª: {totals["recommendation"]} ({totals["reasoning"]})')
    
    # 2. –ê–Ω–∞–ª–∏–∑ —Å Claude AI
    print('\\nü§ñ –®–∞–≥ 2: –ê–Ω–∞–ª–∏–∑ —Å Claude AI...')
    claude_analyzer = ClaudeAnalyzer(logger)
    analyzed_matches = claude_analyzer.analyze_multiple_matches(all_matches)
    
    print(f'–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ: {len(analyzed_matches)} –º–∞—Ç—á–µ–π')
    
    # 3. –í—ã–±–æ—Ä –ª—É—á—à–∏—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
    print('\\nüéØ –®–∞–≥ 3: –í—ã–±–æ—Ä –ª—É—á—à–∏—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π...')
    best_matches = claude_analyzer.get_best_recommendations(analyzed_matches, 5)
    
    print(f'–í—ã–±—Ä–∞–Ω–æ –ª—É—á—à–∏—Ö: {len(best_matches)} —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π')
    
    # 4. –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –¥–ª—è Telegram
    print('\\nüì± –®–∞–≥ 4: –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram –æ—Ç—á–µ—Ç–∞...')
    telegram_reporter = TelegramReporter(logger)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    report = telegram_reporter._build_report(best_matches)
    
    print('\\n' + '='*70)
    print('üì± –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ –î–õ–Ø @TrueLiveBet:')
    print('='*70)
    print(report)
    print('='*70)
    
    # 5. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print('\\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´:')
    print(f'‚Ä¢ –ú–∞—Ç—á–µ–π —Å–æ–±—Ä–∞–Ω–æ: {len(all_matches)}')
    print(f'‚Ä¢ –ú–∞—Ç—á–µ–π –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ: {len(analyzed_matches)}')
    print(f'‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –≤—ã–±—Ä–∞–Ω–æ: {len(best_matches)}')
    print(f'‚Ä¢ –†–∞–∑–º–µ—Ä –æ—Ç—á–µ—Ç–∞: {len(report)} —Å–∏–º–≤–æ–ª–æ–≤')
    print(f'‚Ä¢ –í–∏–¥—ã —Å–ø–æ—Ä—Ç–∞: {len(set(m.get("sport") for m in all_matches))}')
    
    print('\\n‚úÖ –°–ò–°–¢–ï–ú–ê –ü–û–õ–ù–û–°–¢–¨–Æ –†–ê–ë–û–¢–ê–ï–¢!')
    print('üîë –ù—É–∂–µ–Ω —Ç–æ–ª—å–∫–æ Claude API –∫–ª—é—á –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞')
    print('üöÄ –ü–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–ª—é—á–∞ —Å–∏—Å—Ç–µ–º–∞ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å 24/7')

if __name__ == '__main__':
    test_complete_system()